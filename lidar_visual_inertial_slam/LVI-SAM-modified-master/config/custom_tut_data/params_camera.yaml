%YAML:1.0

# Project
project_name: "lvi_sam" 

#common parameters
imu_topic: "/imu/data"
image_topic: "/camera/fisheye1/image_raw"
point_cloud_topic: "/velodyne_points"

# Lidar Params
use_lidar: 1                     # whether use depth info from lidar or not
lidar_skip: 3                    # skip this amount of scans
align_camera_lidar_estimation: 1 # align camera and lidar estimation for visualization

# lidar to camera extrinsic
lidar_to_cam_tx: 0
lidar_to_cam_ty: 0
lidar_to_cam_tz: 0.13
lidar_to_cam_rx: 0
lidar_to_cam_ry: 0
lidar_to_cam_rz: -1.5707963267948966

# imu to lidar extrinsic 
imu_to_lidar_tx: 0
imu_to_lidar_ty: 0
imu_to_lidar_tz: 0.08
imu_to_lidar_rx: 0
imu_to_lidar_ry: 0
imu_to_lidar_rz: 0


# model_type: PINHOLE
# camera_name: camera

# image_width: 848
# image_height: 800

# distortion_parameters:
#    k1: -0.0123622203245759   # Mapping from k2 (radial distortion)
#    k2: 0.0516598783433437    # Mapping from k3 (radial distortion)
#    p1: 0.0                   # Tangential distortion assumed to be 0 (not given in original)
#    p2: 0.0                   # Tangential distortion assumed to be 0 (not given in original)

# projection_parameters:
#    fx: 285.521087646484       # Mapping from mu (focal length in x)
#    fy: 285.586303710938       # Mapping from mv (focal length in y)
#    cx: 427.286010742188       # Mapping from u0 (principal point x)
#    cy: 388.918914794922       # Mapping from v0 (principal point y)



# camera model
model_type: PINHOLE
camera_name: camera

image_width: 848
image_height: 800
distortion_parameters:
   k1: -0.0123622203245759 
   k2: 0.0516598783433437
   p1: 0.0
   p2: 0.0
projection_parameters:
   fx: 285.521087646484
   fy: 285.586303710938  
   cx: 427.286010742188 
   cy: 388.918914794922  


#imu parameters       The more accurate parameters you provide, the worse performance
acc_n: 2.8204438138836063e-02         # accelerometer measurement noise standard deviation.
gyr_n: 2.4927177105924072e-03         # gyroscope measurement noise standard deviation.
acc_w: 4.0739558582909998e-04        # accelerometer bias random work noise standard deviation.
gyr_w: 1.7029730578800357e-05       # gyroscope bias random work noise standard deviation.
g_norm: 9.81007       # gravity magnitude
imu_hz: 400         # frequency of imu

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 6.123233995736766e-17, -1.0, 0.0,
           1.0, 6.123233995736766e-17, 0.0, 
           -0.0, 0.0, 1.0]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.00, 0.00,  -0.21000000000000002]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 20            # min distance between two features 
freq: 20                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.035   # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0  # keyframe selection threshold (pixel)

#unsynchronization parameters
estimate_td: 0           # online estimate time offset between camera and imu
td: -0.004492987156480011                   # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0       # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0    # unit: s. rolling shutter read out time per frame (from data sheet). 

#loop closure parameters
loop_closure: 1                    # start loop closure
skip_time: 0.0
skip_dist: 0.0
debug_image: 0                      # save raw image in loop detector for visualization prupose; you can close this function by setting 0 
match_image_scale: 0.5
vocabulary_file: "/config/brief_k10L6.bin"
brief_pattern_file: "/config/brief_pattern.yml"
