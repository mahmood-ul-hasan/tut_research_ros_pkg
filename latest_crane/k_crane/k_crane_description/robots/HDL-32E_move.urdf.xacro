<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="HDL-32E">
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:macro name="HDL-32E" params="parent:=base_link name:=velodyne topic:=/velodyne_points hz:=10 lasers:=32 samples:=2187 collision_range:=0.3 min_range:=0.9 max_range:=130.0 noise:=0.008 min_angle:=-${M_PI} max_angle:=${M_PI} gpu:=true xyz rpy">

    <joint name="${name}_base_mount_joint" type="fixed">
      <origin xyz="${xyz}" rpy="${rpy}"/> 
      <parent link="${parent}"/>
      <child link="${name}"/>
    </joint>

    <!-- <joint name="base_to_laser_joint" type="continuous">
      <parent link="${parent}"/>
      <child  link="${name}"/>
      <origin xyz="${xyz}" rpy="${rpy}"/> 
      <axis xyz="1 0 0"/>
      <limit effort="10000" velocity="1000"/>
      <joint_properties damping="1.0" friction="15.0"/>
    </joint>

    
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
          <robotNamespace>/marvin</robotNamespace>
          <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
          <legacyModeNS>true</legacyModeNS>
        </plugin>
    </gazebo>

    <transmission name="base_to_laser_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="motor1">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="base_to_laser_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
   </transmission> -->
   
      

    <link name="${name}">

     <visual>
			  <!-- <origin xyz="0 0 1" rpy="0 0 0"/> -->
			  <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <!-- <cylinder radius="0.2" length="0.6" /> -->
          <box size="0.2 0.15 0.1"/>
        </geometry>
        <material name="Blue" />
     </visual>

      <inertial>
			  <!-- <origin xyz="0 0 1" rpy="0 0 0"/> -->
			  <origin xyz="0 0 1" rpy="0 0 0"/>
        <mass value="1.0"/>
        <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
      </inertial>

      <collision>
			  <!-- <origin xyz="0 0 1" rpy="0 0 0"/> -->
			  <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.2" length="0.6" />
        </geometry>
      </collision>
    </link>
    <!-- Gazebo requires the velodyne_gazebo_plugins package -->
    <gazebo reference="${name}">
      <xacro:if value="${gpu}">
        <sensor type="gpu_ray" name="${name}-HDL32E">
          <pose>0 0 0 0 0 0</pose>
          <visualize>true</visualize>
          <update_rate>${hz}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1</resolution>
                <min_angle>${min_angle}</min_angle>
                <max_angle>${max_angle}</max_angle>
              </horizontal>
              <vertical>
                <samples>${lasers}</samples>
                <resolution>1</resolution>
                <min_angle>-${30.67*M_PI/180.0}</min_angle>
                <max_angle> ${10.67*M_PI/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${collision_range}</min>
              <max>${max_range+1}</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_gpu_laser.so">
            <topicName>${topic}</topicName>
            <frameName>${name}</frameName>
            <min_range>${min_range}</min_range>
            <max_range>${max_range}</max_range>
            <gaussianNoise>${noise}</gaussianNoise>
          </plugin>
        </sensor>
      </xacro:if>
      <xacro:unless value="${gpu}">
        <sensor type="ray" name="${name}-HDL32E">
          <pose>0 0 0 0 0 0</pose>
          <visualize>true</visualize>
          <update_rate>${hz}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1</resolution>
                <min_angle>${min_angle}</min_angle>
                <max_angle>${max_angle}</max_angle>
              </horizontal>
              <vertical>
                <samples>${lasers}</samples>
                <resolution>1</resolution>
                <min_angle>-${30.67*M_PI/180.0}</min_angle>
                <max_angle> ${10.67*M_PI/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${collision_range}</min>
              <max>${max_range+1}</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
            <topicName>${topic}</topicName>
            <frameName>${name}</frameName>
            <min_range>${min_range}</min_range>
            <max_range>${max_range}</max_range>
            <gaussianNoise>${noise}</gaussianNoise>
          </plugin>
        </sensor>
      </xacro:unless>
    </gazebo>

  </xacro:macro>
</robot>
