%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1  

imu_topic: "/imu/data"
image0_topic: "/usb_cam/image_raw"
image1_topic: "/usb_cam1/image_raw"
output_path: "~/output/"

cam0_calib: "mcm_320_calibration_parammeter.yaml"
cam1_calib: "mcm_320_calibration_parammeter.yaml"
image_width: 1600
image_height: 1200
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1  # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [  -0.109263,   0.991284, -0.0736011, 0,
            -0.988386,  -0.100479,   0.114004, 0,
            0.105615,  0.0852028,   0.99075,  0,
           0, 0, 0, 1]

   
   # data: [0,   0,  -1,  0,
   #        0,   1,  0,  0,
   #        1,   0,  0,  0,
   #        0,   0,  0,  1]


#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 9.2497467251264221e-03          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 2.0704939712453958e-03       # gyroscope measurement noise standard deviation.     #0.05
acc_w: 1.2877284429016760e-04        # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 3.2249280657800008e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
